openapi: 3.0.1
paths:
  '/collections/{collectionId}/items':
    post:
      summary: add a new STAC Item to a collection
      description: create a new STAC Item in a specific collection
      operationId: postFeature
      tags:
        - Transaction Extension
      parameters:
        - $ref: '#/components/parameters/collectionId'
      requestBody:
        content:
          application/json:
            schema:
                oneOf:
                 - $ref: '#/components/schemas/item'
                 - $ref: '#/components/schemas/itemCollection'
      responses:
        '201':
          description: Status of the create request.
          headers:
            Location:
              description: The URL of the newly added resource (i.e. path of the resource end point)
              schema:
                type: string
                format: url
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
  '/collections/{collectionId}/items/{featureId}':
    get:
      responses:
        '200':
          headers:
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
    put:
      summary: update an existing feature by Id with a complete item definition
      description: >-
        Use this method to update an existing feature. Requires the entire
        GeoJSON  description be submitted.
      operationId: updateFeature
      tags:
        - Transaction Extension
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/featureId'
        - $ref: '#/components/parameters/IfMatch'
      requestBody:
        description: The request body shall contain a representation of the replacement item.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item'
      responses:
        '204':
          description: The item was replaced
          headers:
            ETag:
              schema:
                type: string
              description: An updated string to track changes
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
#    patch:
#      summary: update an existing feature by Id with a partial item definition
#      description: >-
#        Use this method to update an existing feature. Requires a GeoJSON
#        fragment (containing the fields to be updated) be submitted.
#      operationId: patchFeature
#      tags:
#        - Transaction Extension
#      parameters:
#        - $ref: '#/components/parameters/collectionId'
#        - $ref: '#/components/parameters/featureId'
#        - $ref: '#/components/parameters/IfMatchOptional'
#      requestBody:
#        content:
#          application/json:
#            schema:
#              $ref: '#/components/schemas/partialItem'
#      responses:
#        '204':
#          description: Status of the update request.
#          headers:
#            ETag:
#              schema:
#                type: string
#              description: A string to ensure the item has not been modified
#        '400':
#          $ref: '#/components/responses/BadRequest'
#        '404':
#          $ref: '#/components/responses/NotFound'
#        '500':
#          $ref: '#/components/responses/ServerError'
#        default:
#          description: An error occurred.
#          content:
#            application/json:
#              schema:
#                $ref: '#/components/schemas/exception'
#            text/html:
#              schema:
#                type: string
    delete:
      summary: delete an existing feature by Id
      description: Use this method to delete an existing feature.
      operationId: deleteFeature
      tags:
        - Transaction Extension
      parameters:
        - $ref: '#/components/parameters/collectionId'
        - $ref: '#/components/parameters/featureId'
        - $ref: '#/components/parameters/IfMatch'
      responses:
        '204':
          description: The resource was deleted.
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
components:
  parameters:
    IfMatch:
      name: If-Match
      in: header
      description: >-
        Only take the action if the ETag of the item still matches
      required: true
      schema:
        type: string
    IfMatchOptional:
      name: If-Match
      in: header
      description: >-
        Only take the action if the ETag of the item still matches
      required: false
      schema:
        type: string
  schemas:
    partialItem:
      type: object
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        id:
          $ref: '#/components/schemas/itemId'
        bbox:
          $ref: '#/components/schemas/bbox'
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        type:
          $ref: '#/components/schemas/itemType'
        properties:
          $ref: '#/components/schemas/partialItemProperties'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        assets:
          $ref: '#/components/schemas/itemAssets'
      example:
        assets:
          analytic:
            title: 1-Band Analytic
            href: http://cool-sat.com/catalog/collections/cs/items/CS3-201605XX_132130_04/analytic-1.tif
    partialItemProperties:
      type: object
      description: allows for partial collections of metadata fields
      additionalProperties: true
      properties:
        datetime:
          $ref: '#/components/schemas/datetime'
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    BadRequest:
      description: The request was malformed or semantically invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    PreconditionFailed:
      description: Some condition specified by the request could not be met in the server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    InternalServerError:
      description: The request was syntactically and semantically valid, but an error occurred while trying to act upon it
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
tags:
  - name: Transaction Extension
    description: >-
      STAC-specific operations to add, remove, and edit items within OGC API - Features
      collections.